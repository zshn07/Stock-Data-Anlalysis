# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1njxnlqs_hm6hVlpKJoNghyu8ftNqVdy8
"""

!pip install yfinance pandas matplotlib

data = yf.download("AAPL", start="2020-01-01", end="2024-12-31")

import yfinance as yf

data = yf.download("AAPL", start="2020-01-01", end="2024-12-31")
data.head()

import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt

#Download historical stock data for one ticker
ticker = "AAPL"
data = yf.download(ticker, start="2020-01-01", end="2024-12-31")

#Calculate daily returns using 'Close' price
data["Daily Return"] = data["Close"].pct_change()

#Calculate rolling 20-day moving average using 'Close' price
data["MA20"] = data["Close"].rolling(window=20).mean()

#Plot the closing price and moving average
plt.figure(figsize=(12,6))
plt.plot(data["Close"], label="Close Price")
plt.plot(data["MA20"], label="20-day Moving Average")
plt.title(f"{ticker} Price & 20-day Moving Average")
plt.xlabel("Date")
plt.ylabel("Price (USD)")
plt.legend()
plt.grid(True)
plt.show()

#Plot the daily return distribution
plt.figure(figsize=(10,4))
data["Daily Return"].hist(bins=50)
plt.title(f"{ticker} Daily Return Distribution")
plt.xlabel("Daily Return")
plt.ylabel("Frequency")
plt.grid(True)
plt.show()

#Calculate and plot cumulative returns
data["Cumulative Return"] = (1 + data["Daily Return"]).cumprod() - 1

plt.figure(figsize=(12,6))
plt.plot(data["Cumulative Return"], label="Cumulative Return")
plt.title(f"{ticker} Cumulative Return Over Time")
plt.xlabel("Date")
plt.ylabel("Cumulative Return")
plt.legend()
plt.grid(True)
plt.show()

#Print summary statistics
print("\nSummary Statistics:")
print("-------------------")
print("Average Daily Return:      ", round(data["Daily Return"].mean(), 6))
print("Volatility (Std Dev):      ", round(data["Daily Return"].std(), 6))
print("Cumulative Return:         ", round(data["Cumulative Return"].iloc[-1], 6))
print("Max Daily Return:          ", round(data["Daily Return"].max(), 6))
print("Min Daily Return:          ", round(data["Daily Return"].min(), 6))
print("Total Trading Days:        ", len(data))



